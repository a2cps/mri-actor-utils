# generated by datamodel-codegen:
#   filename:  https://github.com/tapis-project/tapipy/raw/563ed2fa7e2b2aa1bb8bb1c0738409be10604210/tapipy/resources/openapi_v3-jobs.yml
#   timestamp: 2024-09-02T17:01:32+00:00

from __future__ import annotations

from typing import Any, Literal

from pydantic import AwareDatetime, BaseModel


class JobsProbe(BaseModel):
    checkNum: int | None = None
    databaseAccess: bool | None = None
    tenantsAccess: bool | None = None
    queueAccess: bool | None = None


class ResultMetadata(BaseModel):
    pass


class RespBasic(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: dict[str, Any] | None = None


class JobHideDisplay(BaseModel):
    message: str | None = None


class RespHideJob(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: JobHideDisplay | None = None


class ResultName(BaseModel):
    name: str | None = None


class JobCancelDisplay(BaseModel):
    message: str | None = None


class RespCancelJob(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: JobCancelDisplay | None = None


class Job(BaseModel):
    id: int | None = None
    name: str | None = None
    owner: str | None = None
    tenant: str | None = None
    description: str | None = None
    status: (
        Literal[
            'PENDING',
            'PROCESSING_INPUTS',
            'STAGING_INPUTS',
            'STAGING_JOB',
            'SUBMITTING_JOB',
            'QUEUED',
            'RUNNING',
            'ARCHIVING',
            'BLOCKED',
            'PAUSED',
            'FINISHED',
            'CANCELLED',
            'FAILED',
        ]
        | None
    ) = None
    lastMessage: str | None = None
    created: str | None = None
    ended: str | None = None
    lastUpdated: str | None = None
    uuid: str | None = None
    appId: str | None = None
    appVersion: str | None = None
    archiveOnAppError: bool | None = None
    dynamicExecSystem: bool | None = None
    execSystemId: str | None = None
    execSystemExecDir: str | None = None
    execSystemInputDir: str | None = None
    execSystemOutputDir: str | None = None
    execSystemLogicalQueue: str | None = None
    archiveSystemId: str | None = None
    archiveSystemDir: str | None = None
    dtnSystemId: str | None = None
    dtnMountSourcePath: str | None = None
    dtnMountPoint: str | None = None
    nodeCount: int | None = None
    coresPerNode: int | None = None
    memoryMB: int | None = None
    maxMinutes: int | None = None
    fileInputs: str | None = None
    parameterSet: str | None = None
    execSystemConstraints: str | None = None
    subscriptions: str | None = None
    blockedCount: int | None = None
    remoteJobId: str | None = None
    remoteJobId2: str | None = None
    remoteOutcome: Literal['FINISHED', 'FAILED', 'FAILED_SKIP_ARCHIVE'] | None = None
    remoteResultInfo: str | None = None
    remoteQueue: str | None = None
    remoteSubmitted: str | None = None
    remoteStarted: str | None = None
    remoteEnded: str | None = None
    remoteSubmitRetries: int | None = None
    remoteChecksSuccess: int | None = None
    remoteChecksFailed: int | None = None
    remoteLastStatusCheck: str | None = None
    inputTransactionId: str | None = None
    inputCorrelationId: str | None = None
    archiveTransactionId: str | None = None
    archiveCorrelationId: str | None = None
    stageAppTransactionId: str | None = None
    stageAppCorrelationId: str | None = None
    tapisQueue: str | None = None
    visible: bool | None = None
    createdby: str | None = None
    createdbyTenant: str | None = None
    tags: list[str] | None = None
    jobType: Literal['FORK', 'BATCH'] | None = None
    mpiCmd: str | None = None
    cmdPrefix: str | None = None
    sharedAppCtx: str | None = None
    sharedAppCtxAttribs: (
        list[
            Literal[
                'SAC_EXEC_SYSTEM_ID',
                'SAC_EXEC_SYSTEM_EXEC_DIR',
                'SAC_EXEC_SYSTEM_INPUT_DIR',
                'SAC_EXEC_SYSTEM_OUTPUT_DIR',
                'SAC_ARCHIVE_SYSTEM_ID',
                'SAC_ARCHIVE_SYSTEM_DIR',
            ]
        ]
        | None
    ) = None
    notes: str | None = None
    mpi: bool | None = None


class RespGetJob(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: Job | None = None


class JobHistoryDisplayDTO(BaseModel):
    event: str | None = None
    created: AwareDatetime | None = None
    eventDetail: str | None = None
    description: str | None = None
    transferTaskUuid: str | None = None


class RespJobHistory(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: list[JobHistoryDisplayDTO] | None = None


class JobListDTO(BaseModel):
    uuid: str | None = None
    name: str | None = None
    owner: str | None = None
    appId: str | None = None
    created: AwareDatetime | None = None
    status: (
        Literal[
            'PENDING',
            'PROCESSING_INPUTS',
            'STAGING_INPUTS',
            'STAGING_JOB',
            'SUBMITTING_JOB',
            'QUEUED',
            'RUNNING',
            'ARCHIVING',
            'BLOCKED',
            'PAUSED',
            'FINISHED',
            'CANCELLED',
            'FAILED',
        ]
        | None
    ) = None
    remoteStarted: AwareDatetime | None = None
    ended: AwareDatetime | None = None
    tenant: str | None = None
    execSystemId: str | None = None
    archiveSystemId: str | None = None
    appVersion: str | None = None
    lastUpdated: AwareDatetime | None = None


class RespGetJobList(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: list[JobListDTO] | None = None


class FileInfo(BaseModel):
    mimeType: str | None = None
    type: Literal['file', 'dir', 'symbolic_link', 'other', 'unknown'] | None = None
    owner: str | None = None
    group: str | None = None
    nativePermissions: str | None = None
    url: str | None = None
    lastModified: AwareDatetime | None = None
    name: str | None = None
    path: str | None = None
    size: int | None = None


class RespGetJobOutputList(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: list[FileInfo] | None = None


class RespJobSearchAllAttributes(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: list[Job] | None = None


class JobUnShareDisplay(BaseModel):
    message: str | None = None


class RespUnShareJob(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: JobUnShareDisplay | None = None


class JobShareListDTO(BaseModel):
    tenant: str | None = None
    createdby: str | None = None
    jobUuid: str | None = None
    grantee: str | None = None
    jobResource: str | None = None
    jobPermission: str | None = None
    created: AwareDatetime | None = None


class RespGetJobShareList(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: list[JobShareListDTO] | None = None


class JobShareDisplay(BaseModel):
    message: str | None = None


class RespShareJob(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: JobShareDisplay | None = None


class ReqShareJob(BaseModel):
    grantee: str | None = None
    jobResource: (
        list[Literal['JOB_HISTORY', 'JOB_RESUBMIT_REQUEST', 'JOB_OUTPUT', 'JOB_INPUT']]
        | None
    ) = None
    jobPermission: Literal['READ'] | None = None


class JobStatusDisplay(BaseModel):
    status: str | None = None


class RespGetJobStatus(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: JobStatusDisplay | None = None


class IncludeExcludeFilter(BaseModel):
    includes: list[str] | None = None
    excludes: list[str] | None = None
    includeLaunchFiles: bool | None = None


class JobArgSpec(BaseModel):
    name: str | None = None
    description: str | None = None
    include: bool | None = None
    arg: str | None = None
    notes: dict[str, Any] | None = None


class JobFileInput(BaseModel):
    name: str | None = None
    description: str | None = None
    autoMountLocal: bool | None = None
    sourceUrl: str | None = None
    targetPath: str | None = None
    notes: dict[str, Any] | None = None


class JobFileInputArray(BaseModel):
    name: str | None = None
    description: str | None = None
    sourceUrls: list[str] | None = None
    targetDir: str | None = None
    notes: dict[str, Any] | None = None


class KeyValuePair(BaseModel):
    key: str | None = None
    value: str | None = None
    description: str | None = None
    include: bool | None = None
    notes: dict[str, Any] | None = None


class LogConfig(BaseModel):
    stdoutFilename: str | None = None
    stderrFilename: str | None = None


class NotifDeliveryTarget(BaseModel):
    deliveryMethod: Literal['WEBHOOK', 'EMAIL', 'QUEUE', 'ACTOR'] | None = None
    deliveryAddress: str | None = None


class ReqSubscribe(BaseModel):
    description: str | None = None
    enabled: bool | None = None
    eventCategoryFilter: (
        Literal[
            'JOB_NEW_STATUS',
            'JOB_INPUT_TRANSACTION_ID',
            'JOB_ARCHIVE_TRANSACTION_ID',
            'JOB_SUBSCRIPTION',
            'JOB_SHARE_EVENT',
            'JOB_ERROR_MESSAGE',
            'JOB_USER_EVENT',
            'ALL',
        ]
        | None
    ) = None
    deliveryTargets: list[NotifDeliveryTarget] | None = None
    ttlminutes: int | None = None


class RespSubmitJob(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: Job | None = None


class ReqUserEvent(BaseModel):
    eventData: str
    eventDetail: str | None = None


class ResultChangeCount(BaseModel):
    changes: int | None = None


class DeliveryTarget(BaseModel):
    deliveryMethod: Literal['WEBHOOK', 'EMAIL'] | None = None
    deliveryAddress: str | None = None


class TapisSubscription(BaseModel):
    tenant: str | None = None
    name: str | None = None
    description: str | None = None
    owner: str | None = None
    enabled: bool | None = None
    typeFilter: str | None = None
    subjectFilter: str | None = None
    deliveryTargets: list[DeliveryTarget] | None = None
    ttlMinutes: int | None = None
    uuid: str | None = None
    expiry: str | None = None
    created: str | None = None
    updated: str | None = None


class ResultResourceUrl(BaseModel):
    url: str | None = None


class RespProbe(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: JobsProbe | None = None


class RespName(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: ResultName | None = None


class JobParameterSet(BaseModel):
    appArgs: list[JobArgSpec] | None = None
    containerArgs: list[JobArgSpec] | None = None
    schedulerOptions: list[JobArgSpec] | None = None
    envVariables: list[KeyValuePair] | None = None
    archiveFilter: IncludeExcludeFilter | None = None
    logConfig: LogConfig | None = None


class ReqSubmitJob(BaseModel):
    name: str
    owner: str | None = None
    tenant: str | None = None
    description: str | None = None
    appId: str
    appVersion: str
    jobType: str | None = None
    archiveOnAppError: bool | None = None
    dynamicExecSystem: bool | None = None
    execSystemId: str | None = None
    execSystemExecDir: str | None = None
    execSystemInputDir: str | None = None
    execSystemOutputDir: str | None = None
    execSystemLogicalQueue: str | None = None
    archiveSystemId: str | None = None
    archiveSystemDir: str | None = None
    nodeCount: int | None = None
    coresPerNode: int | None = None
    memoryMB: int | None = None
    maxMinutes: int | None = None
    fileInputs: list[JobFileInput] | None = None
    fileInputArrays: list[JobFileInputArray] | None = None
    parameterSet: JobParameterSet | None = None
    execSystemConstraints: list[str] | None = None
    tags: list[str] | None = None
    subscriptions: list[ReqSubscribe] | None = None
    isMpi: bool | None = None
    mpiCmd: str | None = None
    cmdPrefix: str | None = None
    notes: dict[str, Any] | None = None


class RespGetResubmit(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: ReqSubmitJob | None = None


class RespGetSubscriptions(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: list[TapisSubscription] | None = None


class RespResourceUrl(BaseModel):
    status: str | None = None
    message: str | None = None
    version: str | None = None
    commit: str | None = None
    build: str | None = None
    metadata: ResultMetadata | None = None
    result: ResultResourceUrl | None = None
